// this file is initially generated by bisonc++, but then it is
// maintained by human

// Generated by Bisonc++ V6.04.01 on Mon, 04 Apr 2022 23:49:58 +0300

    // Include this file in the sources of the class parser.

// $insert class.h
#include "parser.hpp"

// $insert namespace-open
namespace bnf
{

tml::forest parser::read(const papki::file& fi){
	papki::file::guard file_guard(fi, papki::file::mode::read);

	parser p(fi);
	p.parse();

	return std::move(p.forest);
}

inline void parser::error()
{
    std::cerr << "Syntax error\n";
}

// $insert lex
inline int parser::lex()
{
	std::array<uint8_t, 1> buf;
	auto num_read = this->fi.read(buf);

	std::cout << "read " << num_read << " bytes" << std::endl;

	// check for EOF
	if(num_read == 0){
		return 0;
	}

	return buf[0];
}

inline void parser::print()         
{
}

inline void parser::exceptionHandler(std::exception const &exc)         
{
    throw;              // re-implement to handle exceptions thrown by actions
}

// $insert namespace-close
}

    // Add here includes that are only required for the compilation 
    // of parser's sources.


// $insert namespace-use
    // UN-comment the next using-declaration if you want to use
    // symbols from the namespace bnf without specifying bnf::
//using namespace bnf;

    // UN-comment the next using-declaration if you want to use
    // int parser's sources symbols from the namespace std without
    // specifying std::

//using namespace std;
