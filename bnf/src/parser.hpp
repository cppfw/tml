// this file is initially generated by bisonc++, but then it is
// maintained by human

// Generated by Bisonc++ V6.04.01 on Sun, 03 Apr 2022 14:17:52 +0300

#ifndef parser_h_included
#define parser_h_included

// $insert baseclass
#include "../out/parserBase.hpp"


// $insert undefparser
#undef parser
    // CAVEAT: between the baseclass-include directive and the 
    // #undef directive in the previous line references to parser 
    // are read as parserBase.
    // If you need to include additional headers in this file 
    // you should do so after these comment-lines.


class parser: public parserBase
{
        
    public:
        parser() = default;
        int parse();

    private:
        void error();                   // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
        void exceptionHandler(std::exception const &exc);

    // support functions for parse():
        void executeAction_(int ruleNr);
        void errorRecovery_();
        void nextCycle_();
        void nextToken_();
        void print_();
};


#endif
